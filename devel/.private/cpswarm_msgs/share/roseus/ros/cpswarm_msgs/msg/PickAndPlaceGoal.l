;; Auto-generated. Do not edit!


(when (boundp 'cpswarm_msgs::PickAndPlaceGoal)
  (if (not (find-package "CPSWARM_MSGS"))
    (make-package "CPSWARM_MSGS"))
  (shadow 'PickAndPlaceGoal (find-package "CPSWARM_MSGS")))
(unless (find-package "CPSWARM_MSGS::PICKANDPLACEGOAL")
  (make-package "CPSWARM_MSGS::PICKANDPLACEGOAL"))

(in-package "ROS")
;;//! \htmlinclude PickAndPlaceGoal.msg.html
(if (not (find-package "GEOMETRY_MSGS"))
  (ros::roseus-add-msgs "geometry_msgs"))


(defclass cpswarm_msgs::PickAndPlaceGoal
  :super ros::object
  :slots (_box_id _target_pose ))

(defmethod cpswarm_msgs::PickAndPlaceGoal
  (:init
   (&key
    ((:box_id __box_id) 0)
    ((:target_pose __target_pose) (instance geometry_msgs::PoseStamped :init))
    )
   (send-super :init)
   (setq _box_id (round __box_id))
   (setq _target_pose __target_pose)
   self)
  (:box_id
   (&optional __box_id)
   (if __box_id (setq _box_id __box_id)) _box_id)
  (:target_pose
   (&rest __target_pose)
   (if (keywordp (car __target_pose))
       (send* _target_pose __target_pose)
     (progn
       (if __target_pose (setq _target_pose (car __target_pose)))
       _target_pose)))
  (:serialization-length
   ()
   (+
    ;; uint32 _box_id
    4
    ;; geometry_msgs/PoseStamped _target_pose
    (send _target_pose :serialization-length)
    ))
  (:serialize
   (&optional strm)
   (let ((s (if strm strm
              (make-string-output-stream (send self :serialization-length)))))
     ;; uint32 _box_id
       (write-long _box_id s)
     ;; geometry_msgs/PoseStamped _target_pose
       (send _target_pose :serialize s)
     ;;
     (if (null strm) (get-output-stream-string s))))
  (:deserialize
   (buf &optional (ptr- 0))
   ;; uint32 _box_id
     (setq _box_id (sys::peek buf ptr- :integer)) (incf ptr- 4)
   ;; geometry_msgs/PoseStamped _target_pose
     (send _target_pose :deserialize buf ptr-) (incf ptr- (send _target_pose :serialization-length))
   ;;
   self)
  )

(setf (get cpswarm_msgs::PickAndPlaceGoal :md5sum-) "f7247c6ee9f5f72bd29e2c7e6b76c108")
(setf (get cpswarm_msgs::PickAndPlaceGoal :datatype-) "cpswarm_msgs/PickAndPlaceGoal")
(setf (get cpswarm_msgs::PickAndPlaceGoal :definition-)
      "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
uint32 box_id 				# id of the cart detected
geometry_msgs/PoseStamped target_pose      

================================================================================
MSG: geometry_msgs/PoseStamped
# A Pose with reference coordinate frame and timestamp
Header header
Pose pose

================================================================================
MSG: std_msgs/Header
# Standard metadata for higher-level stamped data types.
# This is generally used to communicate timestamped data 
# in a particular coordinate frame.
# 
# sequence ID: consecutively increasing ID 
uint32 seq
#Two-integer timestamp that is expressed as:
# * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
# * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
# time-handling sugar is provided by the client library
time stamp
#Frame this data is associated with
# 0: no frame
# 1: global frame
string frame_id

================================================================================
MSG: geometry_msgs/Pose
# A representation of pose in free space, composed of position and orientation. 
Point position
Quaternion orientation

================================================================================
MSG: geometry_msgs/Point
# This contains the position of a point in free space
float64 x
float64 y
float64 z

================================================================================
MSG: geometry_msgs/Quaternion
# This represents an orientation in free space in quaternion form.

float64 x
float64 y
float64 z
float64 w

")



(provide :cpswarm_msgs/PickAndPlaceGoal "f7247c6ee9f5f72bd29e2c7e6b76c108")


